@using Hoist.Data;
@using Hoist.Services.Interfaces;
@using Microsoft.AspNetCore.Identity;
@model Hoist.Models.Company
@using Hoist.Models.Enums
@using Microsoft.EntityFrameworkCore;
@using System.Text.Json;
@using System.Text.Json.Serialization;

@inject UserManager<BTUser> _UserManager
@inject ApplicationDbContext _Context
@inject IBTFileService _FileService

@{
    ViewBag.Title = "Dashboard";
    ViewBag.pTitle = "";
    ViewBag.pageTitle = "Dashboard";
    Layout = "_LayoutDashboard";
}

@section styles{
    <!-- gridjs css -->
    <link rel="stylesheet" href="~/assets/libs/gridjs/theme/mermaid.min.css">
}

@{


    BTUser user = await _UserManager.GetUserAsync(User);
    bool isAdmin = User.IsInRole(nameof(BTRoles.Admin));


    bool isProjectManager = User.IsInRole(nameof(BTRoles.ProjectManager));
    bool isDeveloper = User.IsInRole(nameof(BTRoles.Developer));
    bool isSubmitter = User.IsInRole(nameof(BTRoles.Submitter));

    // Gather unassigned members and then filter the admins out to get a count of employees not assigned to a project.
    IEnumerable<BTUser> unassignedMembers = Model.Members
                                                 .Where(m => m.Projects
                                                                .Where(p => p.Archived == false).Count() == 0);







    IEnumerable<Project> projects = Model.Projects.ToList();

    IEnumerable<Ticket> tickets = projects.SelectMany(p => p.Tickets);

    IEnumerable<Ticket> activeTickets = tickets.Where(t => t.Archived == false).ToList();

    IEnumerable<Ticket> userActiveTickets = activeTickets.Where(t => t.SubmitterUserId == user.Id || t.DeveloperUserId == user.Id);


    IEnumerable<Notification> notifications = _Context.Notifications
                                                     .Include(n => n.NotificationType)
                                                     .Include(n => n.Sender)
                                                     .Where(n => n.RecipientId == user.Id)
                                                     .OrderByDescending(n => n.Created)
                                                     .ToList();


    int activeTicketCount = activeTickets.Count();



    IEnumerable<Project> activeProjects = projects.Where(p => p.Archived == false);
    IEnumerable<Project> userActiveProjects = activeProjects.Where(p => p.Members.Any(m => m.Id == user.Id));

    int activeProjCount = activeProjects.Count();
    int userActiveProjCount = userActiveProjects.Count();

    DateTime currentTime = DateTime.Now;

    bool isMorning = (currentTime <= DateTime.Today.AddHours(9) && currentTime >= DateTime.Today.AddHours(4));

    DateTime lunchTimeStart = DateTime.Today.AddHours(12);
    DateTime lunchTimeEnd = DateTime.Today.AddHours(13);
    DateTime workingLate = DateTime.Today.AddHours(19);
    DateTime lateNight = DateTime.Today.AddHours(3);
}



<div class="row">
    <div class="col-xxl-3">
        <div class="card card-height-100">
            <div class="card-header border-0 align-items-center d-flex">
                <h4 class="card-title mb-0 flex-grow-1">Welcome back,<br /> @user.FullName</h4>
                <div>
                    <div class="dropdown">
                        <button class="btn btn-soft-primary btn-sm" data-bs-toggle="dropdown"
                                aria-haspopup="true" aria-expanded="false">
                            <span class="text-uppercase align-items-center">
                                <i class="bi bi-three-dots"></i><i class="mdi mdi-chevron-down align-middle ms-1"></i>
                            </span>
                        </button>
                        <div class="dropdown-menu dropdown-menu-end">
                            <a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Settings</a>

                        </div>
                    </div>
                </div>
            </div><!-- end cardheader -->
            <div class="card-body">
                <div class="text-center">

                    <img class="userIcon" src="@_FileService.ConvertByteArrayToFile(user.ImageFileData, user.ImageFileType, (int)DefaultImage.BTUserImage)" />
                </div>

                <ul class="list-group list-group-flush border-dashed mb-0 mt-3 pt-2">
                    <li class="list-group-item px-0">
                        <a asp-action="Index" asp-controller="Projects">
                            <div class="d-flex">
                                <div class="flex-shrink-0 avatar-xs">
                                    <span class="avatar-title bg-soft-info p-1 rounded-circle">
                                        <i class="bi bi-clipboard-data text-success"></i>
                                    </span>
                                </div>
                                <div class="flex-grow-1 ms-2">
                                    <h6 class="mb-1">Active Projects:</h6>
                                    <p class="fs-12 mb-0 text-muted">
                                        @if (isAdmin)
                                        {
                                        <i class="mdi mdi-circle fs-10 align-middle text-danger me-1"></i>
                                            <span>Unassigned:</span>
                                        }
                                        else
                                        {
                                            <i class="mdi mdi-circle fs-10 align-middle text-danger me-1"></i>
                                            <span>Assigned To:</span>
                                        }
                                    </p>
                                </div>
                                <div class="flex-shrink-0 text-end">
                                    <h6 class="mb-1"> @activeProjCount</h6>
                                    @if (isAdmin)
                                    {
                                        <p class="text-success fs-12 mb-0">@projects.Where(p => p.Members.Count() == 0 && p.Archived == false).Count()</p>
                                    }
                                    else
                                    {
                                        <p class="text-success fs-12 mb-0">@projects.Where(p => p.Members.Any( u => u.Id == user.Id) && p.Archived == false).Count()</p>
                                    }
                                    
                                </div>
                            </div>
                        </a>
                    </li><!-- end -->
                    <li class="list-group-item px-0">
                        <a asp-action="Index" asp-controller="Tickets">
                            <div class="d-flex">
                                <div class="flex-shrink-0 avatar-xs">
                                    <span class="avatar-title bg-soft-primary p-1 rounded-circle">
                                        <i class="bi bi-stickies-fill"></i>
                                    </span>
                                </div>
                                <div class="flex-grow-1 ms-2">
                                    <h6 class="mb-1">Active Tickets: </h6>
                                    <p class="fs-12 mb-0 text-muted">
                                        <i class="mdi mdi-circle fs-10 align-middle text-danger me-1"></i>Unassigned:
                                    </p>
                                </div>
                                <div class="flex-shrink-0 text-end">
                                    <h6 class="mb-1">@activeTicketCount</h6>
                                    <p class="text-danger fs-12 mb-0">@activeTickets.Where(t => t.DeveloperUserId == null).Count()</p>
                                </div>
                            </div>
                        </a>
                    </li><!-- end -->
                    <li class="list-group-item px-0">
                        <a asp-controller="Companies" asp-action="Members">

                            <div class="d-flex">
                            <div class="flex-shrink-0 avatar-xs">
                                <span class="avatar-title bg-soft-warning p-1 rounded-circle">
                                    <i class="bi bi-person-workspace text-dark"></i>
                                </span>
                            </div>
                            <div class="flex-grow-1 ms-2">
                                <h6 class="mb-1">Company Members:</h6>
                                <p class="fs-12 mb-0 text-muted">
                                    <i class="mdi mdi-circle fs-10 align-middle text-danger me-1"></i>Unassigned:
                                </p>
                            </div>
                            <div class="flex-shrink-0 text-end">
                                <h6 class="mb-1">@Model.Members.Count()</h6>
                                <p class="text-success fs-12 mb-0">@unassignedMembers.Count()</p>
                            </div>
                        </div>

                        </a>
                    </li><!-- end -->
                    <li class="list-group-item px-0 pb-0">
                        <div class="d-flex text-center">
                        </div>
                    </li><!-- end -->
                </ul><!-- end -->
            </div><!-- end card body -->
        </div><!-- end card -->
    </div><!-- end col -->

    <div class="col-xxl-9 order-xxl-0">
        <div class="d-flex flex-column h-100">
            <div class="row">
                <div class="col-12 mb-2">
                    <div class="card card-animate fade-down">
                        <a class="weatherwidget-io" href="https://forecast7.com/en/40d71n74d01/new-york/?unit=us" data-label_1="Winston-Salem" data-label_2="WEATHER" data-font="Verdana" data-icons="Climacons Animated" data-theme="retro-sky" style="pointer-events: none;">Winston-Salem WEATHER</a>
                        <script>
                            !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0]; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = 'https://weatherwidget.io/js/widget.min.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'weatherwidget-io-js');
                        </script>

                    </div>
                </div>
            </div><!-- end row -->

            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Notifications</h5>
                        </div>
                        <div class="card-body">
                            <table id="scroll-vertical_wrapper" class="table table-bordered dt-responsive nowrap align-middle mdl-data-table" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>Sent</th>
                                        <th>Type</th>
                                        <th>Title</th>
                                        <th>Message</th>
                                        <th>Sender</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody >
                                    @foreach (Notification notification in notifications.Where(n => n.HasBeenViewed == false).OrderByDescending(n => n.Created))
                                    {
                                        <tr>
                                            <td>@notification.Created.ToShortDateString()</td>
                                            <td>@notification.NotificationType.Name</td>
                                            <td>@notification.Title</td>
                                            <td><a href="#!">@notification.Message</a></td>
                                            <td>@notification.Sender.FullName</td>
                                            <td>
                                                <a type="button" asp-action="Viewed" asp-controller="Notifications" asp-route-id="@notification.Id"  class="btn btn-sm btn-soft-info"><i class="bi bi-eye-fill"></i></a>
                                            </td>

                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

        </div><!-- end col -->
    </div><!-- end row -->
    @section scripts{
        <!-- apexcharts -->
        <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>

        <!--datatable js-->
        <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
        <script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
        <script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
        <script src="https://cdn.datatables.net/buttons/2.2.2/js/dataTables.buttons.min.js"></script>
        <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.print.min.js"></script>
        <script src="https://cdn.datatables.net/buttons/2.2.2/js/buttons.html5.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>

        <script src="~/assets/js/pages/datatables.init.js"></script>

        <!-- Swiper Js -->
        <script src="~/assets/libs/swiper/swiper-bundle.min.js"></script>

        <!-- CRM js -->
        <script src="~/assets/js/pages/dashboard-crypto.init.js"></script>

        <!-- App js -->
        <script src="~/assets/js/app.js"></script>

        <script>
            $(document).ready(function () {
                $('#scroll-vertical_wrapper').DataTable({
                    scrollY: '300px', // Set the height of the scrollable area
                    scrollCollapse: true, // Optionally, enable or disable collapsing the table when the displayed data fits within the given height
                    paging: true, // Optionally, disable pagination if you want to show all the data in the scrollable area
                    order: [[0, 'desc']]
                });
            });
        </script>


    }
