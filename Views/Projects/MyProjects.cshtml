@model IPagedList<Hoist.Models.Project>
@using Hoist.Models.Enums;
@using Hoist.Services.Interfaces;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;

@inject IBTFileService _FileService
@inject IBTRolesService _RolesService


@{
    ViewBag.Title = "My Projects";
    ViewBag.pTitle = "My Projects";
    ViewBag.pageTitle = "Projects";
    Layout = "_LayoutDashboard";
}

@{
    double daysUntilDue;
    string cardBackground;
    string headerIcon;

    int totalProjects = Model.TotalItemCount;

    bool isAdmin = User.IsInRole(nameof(BTRoles.Admin));
    bool isProjectManager = User.IsInRole(nameof(BTRoles.ProjectManager));
}

<div class="row g-4 mb-3">
    @if (isAdmin || isProjectManager)
    {

        <div class="col-sm-auto">
            <div>
                <a href="@Url.Action("Create", "Projects")" class="btn btn-success">
                    <i class="ri-add-line align-bottom me-1"></i> Create
                </a>
            </div>
        </div>
    }
    <div class="col-sm">
        <div class="d-flex justify-content-sm-end gap-2">
            @*<div class="search-box ms-2">
            <input type="text" class="form-control" placeholder="Search...">
            <i class="ri-search-line search-icon"></i>
            </div>*@

            <form method="get" asp-action="Index">
                <select class="form-control w-md" name="sortType" onchange="this.form.submit()" asp-items="ViewBag.SortTypes" data-choices data-choices-search-false>
                    <option value="" selected>Sorting by</option>
                </select>

            </form>
        </div>
    </div>
</div>

@if (totalProjects == 0)
{
    <div class="d-flex justify-content-center align-items-center"><blockquote class="blockquote"><p class="fs-40">"Looks like you could use some more work."</p></blockquote></div>
}
else
{

    <div class="row">
        @foreach (Project project in Model)
        {
            daysUntilDue = (project.EndDate - DateTime.Now).TotalDays;

            cardBackground = string.Empty;
            headerIcon = string.Empty;

            @if (project.EndDate == null)
            {
                cardBackground = "bg-light";
                headerIcon = "bi bi-question-lg text-dark";
            }
            else if (daysUntilDue >= 8)
            {
                cardBackground = "bg-soft-success";
                headerIcon = "bi bi-calendar text-dark fs-20";
            }
            else if (daysUntilDue <= 7 && daysUntilDue >= 1)
            {
                cardBackground = "bg-warning bg-opacity-50";
                headerIcon = "bi bi-flag-fill text-dark fs-20";
            }
            else if (daysUntilDue <= 0)
            {
                cardBackground = "bg-danger bg-opacity-50";
                headerIcon = "bi bi-exclamation-triangle-fill text-dark fs-20";
            }

            <div class="col-xxl-3 col-sm-6 project-card">

                <div class="card">
                    <div class="card-body">
                        <div class="p-3 mt-n3 mx-n3 @cardBackground rounded-top ">
                            <div class="d-flex gap-1 align-items-center justify-content-end my-n2">

                                <div class="dropdown">
                                    <button class="btn btn-link text-muted p-1 mt-n1 py-0 text-decoration-none fs-15"
                                    data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                        <i data-feather="more-horizontal" class="icon-sm"></i>
                                    </button>

                                    <div class="dropdown-menu dropdown-menu-end">
                                        <a class="dropdown-item" asp-action="details" asp-route-id="@project.Id">
                                            <i class="ri-eye-fill align-bottom me-2 text-muted"></i>
                                            View
                                        </a>
                                        <a class="dropdown-item" asp-action="edit" asp-route-id="@project.Id">
                                            <i class="ri-pencil-fill align-bottom me-2 text-muted"></i>
                                            Edit
                                        </a>
                                        <div class="dropdown-divider"></div>
                                        <a class="dropdown-item" href="#" data-bs-toggle="modal"
                                   data-bs-target="#removeProjectModal" onclick="setProjectId(@project.Id)">
                                            <i class="ri-delete-bin-fill align-bottom me-2 text-muted"></i>
                                            Archive
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <div class="text-center pb-3">
                                <i class="@headerIcon"></i>
                            </div>
                        </div>
                        <div class="py-3">
                            <h5 class="mb-3 fs-15">
                                <a href="@Url.Action("Overview", "Projects")"
                           class="text-dark">@project.Name</a>
                            </h5>
                            <div class="row gy-3">
                                <div class="col-6">
                                    <div>
                                        <p class="text-muted mb-1">Start Date</p>
                                        <h5 class="fs-14">@project.StartDate.ToString("dd MMM, yyyy")</h5>

                                    </div>
                                </div>
                                <div class="col-6">
                                    <div>
                                        <p class="text-muted mb-1">Deadline</p>
                                        <!--This checks the total days between the two dates and then colors the deadline accordingly.-->
                                        @if (project.EndDate == null)
                                        {
                                            <div class="badge badge-info fs-12">No Deadline Set</div>
                                        }
                                        else if (daysUntilDue >= 8)
                                        {
                                            <div class="badge badge-soft-success fs-12">@project.EndDate.ToString("dd MMM, yyyy")</div>
                                        }
                                        else if (daysUntilDue <= 7 && daysUntilDue >= 1)
                                        {
                                            <div class="badge badge-soft-warning  fs-12">@project.EndDate.ToString("dd MMM, yyyy")</div>
                                        }
                                        else if (daysUntilDue <= 0)
                                        {
                                            <div class="badge bg-danger fs-12">@project.EndDate.ToString("dd MMM, yyyy")</div>
                                        }

                                    </div>
                                </div>
                            </div>

                            <div class="d-flex align-items-center mt-3">
                                <p class="text-muted mb-0 me-2">Team :</p>
                                <div class="avatar-group">
                                    @if (project.Members.Count() == 0)
                                    {
                                        <p class="text-muted mb-0 me-2">None Assigned</p>
                                    }
                                    else
                                    {
                                        @foreach (BTUser member in project.Members)
                                        {
                                            if (await _RolesService.IsUserInRoleAsync(member, nameof(BTRoles.ProjectManager)))
                                            {
                                                <a href="javascript: void(0);" class="avatar-group-item me-3"
                               data-bs-toggle="tooltip" data-bs-trigger="hover"
                               data-bs-placement="top" title="PM: @member.FullName">
                                                    <img src="@_FileService.ConvertByteArrayToFile(member.ImageFileData, member.ImageFileType, (int)DefaultImage.BTProjectManager)"
                                     class="rounded-circle avatar-xxs">
                                                </a>
                                            }
                                        }
                                        @foreach (BTUser member in project.Members)
                                        {



                                            if (!await _RolesService.IsUserInRoleAsync(member, nameof(BTRoles.ProjectManager)))
                                            {
                                                <a href="javascript: void(0);" class="avatar-group-item"
                               data-bs-toggle="tooltip" data-bs-trigger="hover"
                               data-bs-placement="top" title="@member.FullName">
                                                    <img src="@_FileService.ConvertByteArrayToFile(member.ImageFileData, member.ImageFileType, (int)DefaultImage.BTUserImage)"
                                     class="rounded-circle avatar-xxs">
                                                </a>
                                            }
                                        }
                                    }

                                </div>
                            </div>
                        </div>


                    </div>
                    <!-- end card body -->
                </div>

                <!-- end card -->
            </div>
            <!-- end col -->
        }
        <div class="mt-3">

            <div>
                <p class="mb-sm-0 text-muted">
                    Showing <span class="fw-semibold">@((Model.PageNumber - 1) * Model.PageSize + 1)</span> to <span class="fw-semibold">@Math.Min(Model.PageNumber * Model.PageSize, totalProjects)</span> of <span class="fw-semibold text-decoration-underline">@totalProjects</span> entries
                </p>
            </div>

            @*<div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>*@

            <!-- We use the a ViewData to grab the current sort type based on the one sent back from the form above.-->
        @Html.PagedListPager(Model, pageNum => Url.Action("Index", new {pageNum, sortType = ViewBag.CurrentSortType}),
        new PagedListRenderOptions
        {
        UlElementClasses = new string[] { "pagination", "pagination-separated", "justify-content-center", "justify-content-sm-end", "mb-sm-0" },
        LiElementClasses = new string[] {"page-item"},
        PageClasses = new string[] {"page-link"},
        LinkToFirstPageFormat = "<<",
        LinkToPreviousPageFormat = "Prev",
        LinkToNextPageFormat = "Next",
        LinkToLastPageFormat = ">>",
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always
        }
        )
        </div>
    </div>
}
<!-- end row -->
@*<div class="row g-0 text-center text-sm-start align-items-center mb-4">
    <div class="col-sm-6">
        <div>
            <p class="mb-sm-0 text-muted">
                Showing <span class="fw-semibold">@((Model.PageNumber - 1) * Model.PageSize + 1)</span> to <span class="fw-semibold">@Math.Min(Model.PageNumber * Model.PageSize, totalProjects)</span> of <span class="fw-semibold text-decoration-underline">@totalProjects</span> entries
            </p>
        </div>
    </div>
    <!-- end col -->
@*    <div class="col-sm-6">
        <ul class="pagination pagination-separated justify-content-center justify-content-sm-end mb-sm-0">
            <li class="page-item disabled">
                <a href="#" class="page-link">Previous</a>
            </li>
            <li class="page-item active">
                <a href="#" class="page-link">1</a>
            </li>
            <li class="page-item ">
                <a href="#" class="page-link">2</a>
            </li>
            <li class="page-item">
                <a href="#" class="page-link">3</a>
            </li>
            <li class="page-item">
                <a href="#" class="page-link">4</a>
            </li>
            <li class="page-item">
                <a href="#" class="page-link">5</a>
            </li>
            <li class="page-item">
                <a href="#" class="page-link">Next</a>
            </li>
        </ul>
    </div><!-- end col -->
</div>*@
<!-- end row -->
<!-- removeProjectModal -->
<div id="removeProjectModal" class="modal fade zoomIn" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                        id="close-modal"></button>
            </div>
            <div class="modal-body">
                <div class="mt-2 text-center">
                    <lord-icon src="https://cdn.lordicon.com/jtibbqrq.json" trigger="loop"
                               colors="primary:#f7b84b,secondary:#f06548" style="width:100px;height:100px"></lord-icon>
                    <div class="mt-4 pt-2 fs-15 mx-4 mx-sm-5">
                        <h4>Are you Sure ?</h4>
                        <p class="text-muted mx-4 mb-0">Are you Sure You want to archive this Project ?</p>
                    </div>
                </div>
                <div class="d-flex gap-2 justify-content-center mt-4 mb-2">
                    <button type="button" class="btn w-sm btn-light" data-bs-dismiss="modal">Close</button>
                    <button onclick="archiveProject()" type="button" class="btn w-sm btn-danger" id="remove-project">Yes, Archive It!</button>
                </div>
            </div>

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

<!-- /.modal -->
@section scripts{
    <!-- project list init -->
    <script src="~/assets/js/pages/project-list.init.js"></script>

    <!-- App js -->
    <script src="~/assets/js/app.js"></script>


    <script>

        let selectedProjectId;
        function setProjectId(projectId) {
            selectedProjectId = projectId;
        }

        function archiveProject() {
            //String interpolation to create the url needed to handle this particular project
            let url = `/Projects/Archive/${selectedProjectId}`;

            //Sending an AJAX request to the server
            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerifactionToken': document.getElementsByName('__RequestVerificationToken')[0].value
                },
            })
                .then(response => {
                    if (response.ok) {
                        //Handling the success by reloading the page
                        location.reload()
                    }
                    else {
                        //Handling the error
                        console.error('Error when archiving project:', response.statusText);
                    }
                })
                .catch(error => {
                    //Handling network errors
                    console.error('Network error: ', error);
                });
        }
    </script>

}



